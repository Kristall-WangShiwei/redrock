#!/usr/bin/env python

import sys
import scipy as sp
from astropy.io import fits

def convert():

    ###
    p = sys.argv[1]
    cat = fits.open(p)

    if len(cat)!=1:
        print("ERROR: FITS file has more than 1 header")
        return

    ###
    name_mode = False
    eigen_mode = False
    if "NAME0" in cat[0].header:
        nb_templates = len([el for el in cat[0].header if len(el)>4 and el[:4]=="NAME"])
        name_mode = True
    elif "EIGEN0" in cat[0].header:
        nb_templates = 1
        eigen_mode = True
    else:
        print("ERROR: FITS file has no 'NAME' nor 'EIGEN'")
        return

    ###
    for s in range(nb_templates):

        spectype = cat[0].header["OBJECT"].replace(" ","").upper()
        if name_mode:
            subtype = cat[0].header["NAME"+str(s)].replace("-","").replace("/","")
        elif eigen_mode:
            subtype = ""

        ###
        hdus = fits.HDUList()
        header = fits.Header()
        header['CRVAL1']   = cat[0].header["COEFF0"]
        header['CDELT1']   = cat[0].header["COEFF1"]
        header['LOGLAM']   = 1
        header['RRTYPE']   = spectype
        header['RRSUBTYP'] = subtype
        header['RRVER']    = ""
        header['INSPEC']   = p
        header['EXTNAME']  = "BASIS_VECTORS"

        ###
        if name_mode:
            hdus.append(fits.PrimaryHDU(sp.asarray([cat[0].data[s,:]]), header=header))
        elif eigen_mode:
            hdus.append(fits.PrimaryHDU(sp.asarray(cat[0].data), header=header))

        ###
        subtype  = subtype.replace(" ","")
        spectype = spectype.lower()
        if name_mode:
            outfile = "Templates/rrtemplate-"+spectype+"-"+subtype+".fits"
        elif eigen_mode:
            outfile = "Templates/rrtemplate-"+spectype+".fits"
        hdus.writeto(outfile, overwrite=True)
        print('RR: Wrote '+outfile)

    cat.close()

    return

convert()
