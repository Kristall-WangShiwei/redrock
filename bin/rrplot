#!/usr/bin/env python

import argparse
import redrock
from astropy.table import Table

def plotboss():

    parser = argparse.ArgumentParser(description="Plot redrock results for"
        " BOSS target spectra.")

    parser.add_argument("--datatype", type=str, default='desi',
        required=False, help="input data type: desi or boss")

    parser.add_argument("--data", type=str, default=None,
        required=True, help="input data path")

    parser.add_argument("-o", "--output", type=str, default=None,
        required=True, help="output redrock h5 file")

    parser.add_argument("--zbest", type=str, default=None,
        required=True, help="output zbest FITS file")

    parser.add_argument("-t", "--templates", type=str, default=None,
        required=False, help="template directory")

    args = parser.parse_args()

    #- Templates
    templates_path = redrock.templates.find_templates(args.templates)
    templates = {}
    for el in templates_path:
        t = redrock.templates.Template(filename=el)
        templates[t.full_type] = t

    #- Data
    if args.datatype=='desi':
        #- Don't know yet how to do this
        #from redrock.external import desi
        #targets, targetids = boss.read_spectra(args.spplate)
        print("Not yet implemented")
    elif args.datatype=='boss':
        from redrock.external import boss
        targets, targetids = boss.read_spectra(args.data)

    #- Redrock
    zscan, zfit = redrock.results.read_zscan(args.output)
    zbest = Table.read(args.zbest)

    #- Plot
    p = redrock.PlotSpec(targets, templates, zscan, zfit)

    return

plotboss()
